execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/10.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                            
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=618178.96..618614.94 rows=174392 width=279) (actual time=802.168..846.830 rows=114218 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: external merge  Disk: 21328kB
   ->  Finalize GroupAggregate  (cost=557938.79..580344.41 rows=174392 width=279) (actual time=598.957..752.154 rows=114218 loops=1)
         Group Key: customer.c_custkey, nation.n_name
         ->  Gather Merge  (cost=557938.79..576711.25 rows=145326 width=279) (actual time=598.952..696.077 rows=114218 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=556938.77..558937.00 rows=72663 width=279) (actual time=596.255..662.827 rows=38073 loops=3)
                     Group Key: customer.c_custkey, nation.n_name
                     ->  Sort  (cost=556938.77..557120.43 rows=72663 width=259) (actual time=596.246..610.883 rows=114843 loops=3)
                           Sort Key: customer.c_custkey, nation.n_name
                           Sort Method: external merge  Disk: 22904kB
                           Worker 0:  Sort Method: external merge  Disk: 21264kB
                           Worker 1:  Sort Method: external merge  Disk: 21664kB
                           ->  Hash Join  (cost=526868.90..542129.12 rows=72663 width=259) (actual time=498.508..553.034 rows=114843 loops=3)
                                 Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                 ->  Parallel Hash Join  (cost=526867.34..541904.48 rows=72663 width=159) (actual time=498.475..541.264 rows=114843 loops=3)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..12625.00 rows=187500 width=147) (actual time=0.016..12.906 rows=150000 loops=3)
                                       ->  Parallel Hash  (cost=525959.05..525959.05 rows=72663 width=16) (actual time=461.934..461.934 rows=114843 loops=3)
                                             Buckets: 65536 (originally 262144)  Batches: 8 (originally 1)  Memory Usage: 2816kB
                                             ->  Nested Loop  (cost=3718.83..525959.05 rows=72663 width=16) (actual time=22.090..438.054 rows=114843 loops=3)
                                                   ->  Parallel Bitmap Heap Scan on orders  (cost=3718.26..98805.71 rows=72920 width=8) (actual time=22.040..150.656 rows=57338 loops=3)
                                                         Recheck Cond: ((o_orderdate >= '1993-10-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                                         Rows Removed by Index Recheck: 606141
                                                         Heap Blocks: exact=12300 lossy=11086
                                                         ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3674.51 rows=175008 width=0) (actual time=17.655..17.655 rows=172014 loops=1)
                                                               Index Cond: ((o_orderdate >= '1993-10-01'::date) AND (o_orderdate < '1994-01-01 00:00:00'::timestamp without time zone))
                                                   ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..5.75 rows=11 width=16) (actual time=0.004..0.005 rows=2 loops=172014)
                                                         Index Cond: (l_orderkey = orders.o_orderkey)
                                                         Filter: (l_returnflag = 'R'::bpchar)
                                                         Rows Removed by Filter: 2
                                 ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.016..0.016 rows=25 loops=3)
                                       Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                       ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.007..0.009 rows=25 loops=3)
 Planning Time: 1.189 ms
 Execution Time: 867.228 ms
(38 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/11.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=41292.34..41372.34 rows=32000 width=36) (actual time=444.025..444.125 rows=2800 loops=1)
   Sort Key: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric))) DESC
   Sort Method: quicksort  Memory: 228kB
   InitPlan 1 (returns $2)
     ->  Aggregate  (cost=14036.72..14036.74 rows=1 width=32) (actual time=180.898..180.898 rows=1 loops=1)
           ->  Nested Loop  (cost=26.02..13316.72 rows=96000 width=10) (actual time=0.127..164.520 rows=95680 loops=1)
                 ->  Nested Loop  (cost=25.59..733.93 rows=1200 width=4) (actual time=0.117..2.089 rows=1196 loops=1)
                       ->  Seq Scan on nation nation_1  (cost=0.00..1.31 rows=1 width=4) (actual time=0.007..0.010 rows=1 loops=1)
                             Filter: (n_name = 'GERMANY'::bpchar)
                             Rows Removed by Filter: 24
                       ->  Bitmap Heap Scan on supplier supplier_1  (cost=25.59..720.61 rows=1200 width=8) (actual time=0.108..1.960 rows=1196 loops=1)
                             Recheck Cond: (s_nationkey = nation_1.n_nationkey)
                             Heap Blocks: exact=566
                             ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..25.29 rows=1200 width=0) (actual time=0.065..0.065 rows=1196 loops=1)
                                   Index Cond: (s_nationkey = nation_1.n_nationkey)
                 ->  Index Scan using idx_partsupp_suppkey on partsupp partsupp_1  (cost=0.43..9.69 rows=80 width=14) (actual time=0.005..0.131 rows=80 loops=1196)
                       Index Cond: (ps_suppkey = supplier_1.s_suppkey)
   ->  GroupAggregate  (cost=21261.08..24861.08 rows=32000 width=36) (actual time=394.812..443.438 rows=2800 loops=1)
         Group Key: partsupp.ps_partkey
         Filter: (sum((partsupp.ps_supplycost * (partsupp.ps_availqty)::numeric)) > $2)
         Rows Removed by Filter: 87241
         ->  Sort  (cost=21261.08..21501.08 rows=96000 width=14) (actual time=213.883..220.463 rows=95680 loops=1)
               Sort Key: partsupp.ps_partkey
               Sort Method: external merge  Disk: 2448kB
               ->  Nested Loop  (cost=26.02..13316.72 rows=96000 width=14) (actual time=0.167..192.705 rows=95680 loops=1)
                     ->  Nested Loop  (cost=25.59..733.93 rows=1200 width=4) (actual time=0.155..2.347 rows=1196 loops=1)
                           ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.013 rows=1 loops=1)
                                 Filter: (n_name = 'GERMANY'::bpchar)
                                 Rows Removed by Filter: 24
                           ->  Bitmap Heap Scan on supplier  (cost=25.59..720.61 rows=1200 width=8) (actual time=0.144..2.209 rows=1196 loops=1)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=566
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..25.29 rows=1200 width=0) (actual time=0.103..0.103 rows=1196 loops=1)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.69 rows=80 width=18) (actual time=0.006..0.154 rows=80 loops=1196)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
 Planning Time: 0.899 ms
 Execution Time: 444.555 ms
(38 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/12.sql_explained.sql
SET
                                                                                                                                  QUERY PLAN                                                                                                                                  
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=640357.20..641087.98 rows=7 width=27) (actual time=1093.631..1093.632 rows=2 loops=1)
   Group Key: lineitem.l_shipmode
   ->  Gather Merge  (cost=640357.20..641087.80 rows=14 width=27) (actual time=1090.875..1098.329 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=639357.17..640086.16 rows=7 width=27) (actual time=1089.350..1092.084 rows=2 loops=3)
               Group Key: lineitem.l_shipmode
               ->  Sort  (cost=639357.17..639448.29 rows=36446 width=27) (actual time=1086.661..1087.489 rows=31048 loops=3)
                     Sort Key: lineitem.l_shipmode
                     Sort Method: quicksort  Memory: 3208kB
                     Worker 0:  Sort Method: quicksort  Memory: 3203kB
                     Worker 1:  Sort Method: quicksort  Memory: 3172kB
                     ->  Nested Loop  (cost=0.43..636595.76 rows=36446 width=27) (actual time=0.080..1080.240 rows=31048 loops=3)
                           ->  Parallel Seq Scan on lineitem  (cost=0.00..506096.20 rows=36446 width=15) (actual time=0.064..973.163 rows=31048 loops=3)
                                 Filter: ((l_shipmode = ANY ('{MAIL,SHIP}'::bpchar[])) AND (l_commitdate < l_receiptdate) AND (l_shipdate < l_commitdate) AND (l_receiptdate >= '1994-01-01'::date) AND (l_receiptdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Filter: 5967822
                           ->  Index Scan using orders_pkey on orders  (cost=0.43..3.58 rows=1 width=20) (actual time=0.003..0.003 rows=1 loops=93144)
                                 Index Cond: (o_orderkey = lineitem.l_orderkey)
 Planning Time: 0.733 ms
 Execution Time: 1098.581 ms
(20 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/14.sql_explained.sql
SET
                                                                             QUERY PLAN                                                                              
---------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=442166.67..442166.69 rows=1 width=32) (actual time=408.981..408.981 rows=1 loops=1)
   ->  Gather  (cost=442166.44..442166.65 rows=2 width=64) (actual time=406.798..419.455 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=441166.44..441166.45 rows=1 width=64) (actual time=405.226..405.226 rows=1 loops=3)
               ->  Parallel Hash Join  (cost=25556.28..439481.37 rows=96289 width=33) (actual time=357.528..385.681 rows=74879 loops=3)
                     Hash Cond: (lineitem.l_partkey = part.p_partkey)
                     ->  Parallel Bitmap Heap Scan on lineitem  (cost=5933.28..416954.62 rows=96289 width=16) (actual time=39.508..300.884 rows=74879 loops=3)
                           Recheck Cond: ((l_shipdate >= '1995-09-01'::date) AND (l_shipdate < '1995-10-01 00:00:00'::timestamp without time zone))
                           Rows Removed by Index Recheck: 1146987
                           Heap Blocks: exact=18812 lossy=22430
                           ->  Bitmap Index Scan on idx_lineitem_shipdate  (cost=0.00..5875.50 rows=231094 width=0) (actual time=31.385..31.386 rows=224637 loops=1)
                                 Index Cond: ((l_shipdate >= '1995-09-01'::date) AND (l_shipdate < '1995-10-01 00:00:00'::timestamp without time zone))
                     ->  Parallel Hash  (cost=14789.00..14789.00 rows=250000 width=25) (actual time=42.396..42.396 rows=200000 loops=3)
                           Buckets: 65536  Batches: 16  Memory Usage: 2848kB
                           ->  Parallel Seq Scan on part  (cost=0.00..14789.00 rows=250000 width=25) (actual time=0.008..21.117 rows=200000 loops=3)
 Planning Time: 0.652 ms
 Execution Time: 419.531 ms
(18 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/16.sql_explained.sql
SET
                                                                                         QUERY PLAN                                                                                          
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=131706.97..131826.73 rows=47907 width=44) (actual time=1008.151..1008.928 rows=26798 loops=1)
   Sort Key: (count(DISTINCT partsupp.ps_suppkey)) DESC, part.p_brand, part.p_type, part.p_size
   Sort Method: quicksort  Memory: 2885kB
   ->  GroupAggregate  (cost=125283.59..127982.69 rows=47907 width=44) (actual time=787.346..957.626 rows=26798 loops=1)
         Group Key: part.p_brand, part.p_type, part.p_size
         ->  Sort  (cost=125283.59..125727.60 rows=177602 width=40) (actual time=787.326..898.626 rows=355733 loops=1)
               Sort Key: part.p_brand, part.p_type, part.p_size
               Sort Method: external merge  Disk: 18168kB
               ->  Gather  (cost=21041.51..104940.22 rows=177602 width=40) (actual time=47.153..219.975 rows=355733 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Hash Join  (cost=20041.51..86180.02 rows=74001 width=40) (actual time=45.796..214.987 rows=118578 loops=3)
                           Hash Cond: (partsupp.ps_partkey = part.p_partkey)
                           ->  Parallel Seq Scan on partsupp  (cost=1040.01..65866.01 rows=500000 width=8) (actual time=6.711..115.617 rows=799600 loops=3)
                                 Filter: (NOT (hashed SubPlan 1))
                                 Rows Removed by Filter: 400
                                 SubPlan 1
                                   ->  Seq Scan on supplier  (cost=0.00..1040.00 rows=3 width=4) (actual time=0.114..6.683 rows=15 loops=3)
                                         Filter: ((s_comment)::text ~~ '%Customer%Complaints%'::text)
                                         Rows Removed by Filter: 29985
                           ->  Parallel Hash  (cost=18539.00..18539.00 rows=37000 width=40) (actual time=38.706..38.706 rows=29658 loops=3)
                                 Buckets: 131072  Batches: 1  Memory Usage: 7712kB
                                 ->  Parallel Seq Scan on part  (cost=0.00..18539.00 rows=37000 width=40) (actual time=0.012..33.061 rows=29658 loops=3)
                                       Filter: ((p_brand <> 'Brand#45'::bpchar) AND ((p_type)::text !~~ 'MEDIUM POLISHED%'::text) AND (p_size = ANY ('{49,14,23,45,19,3,36,9}'::integer[])))
                                       Rows Removed by Filter: 170342
 Planning Time: 0.752 ms
 Execution Time: 1012.230 ms
(27 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/17.sql_explained.sql
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Aggregate  (cost=583076.26..583076.27 rows=1 width=32) (actual time=2652.701..2652.701 rows=1 loops=1)
   ->  Hash Join  (cost=17104.14..583061.79 rows=5789 width=8) (actual time=24.608..2652.479 rows=1632 loops=1)
         Hash Cond: (lineitem.l_partkey = part.p_partkey)
         Join Filter: (lineitem.l_quantity < (SubPlan 1))
         Rows Removed by Join Filter: 16355
         ->  Seq Scan on lineitem  (cost=0.00..517344.08 rows=17996608 width=17) (actual time=0.010..1199.322 rows=17996609 loops=1)
         ->  Hash  (cost=17096.90..17096.90 rows=579 width=4) (actual time=22.687..22.687 rows=594 loops=1)
               Buckets: 1024  Batches: 1  Memory Usage: 29kB
               ->  Gather  (cost=1000.00..17096.90 rows=579 width=4) (actual time=0.628..22.670 rows=594 loops=1)
                     Workers Planned: 2
                     Workers Launched: 2
                     ->  Parallel Seq Scan on part  (cost=0.00..16039.00 rows=241 width=4) (actual time=0.257..21.390 rows=198 loops=3)
                           Filter: ((p_brand = 'Brand#23'::bpchar) AND (p_container = 'MED BOX'::bpchar))
                           Rows Removed by Filter: 199802
         SubPlan 1
           ->  Aggregate  (cost=137.22..137.23 rows=1 width=32) (actual time=0.025..0.025 rows=1 loops=17987)
                 ->  Index Scan using idx_lineitem_part_supp on lineitem lineitem_1  (cost=0.56..137.14 rows=33 width=5) (actual time=0.003..0.022 rows=31 loops=17987)
                       Index Cond: (l_partkey = part.p_partkey)
 Planning Time: 0.532 ms
 Execution Time: 2652.832 ms
(20 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/18.sql_explained.sql
SET
                                                                                                            QUERY PLAN                                                                                                             
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=1329801.74..1331173.29 rows=548621 width=71) (actual time=6314.268..6314.274 rows=179 loops=1)
   Sort Key: orders.o_totalprice DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 38kB
   ->  Finalize GroupAggregate  (cost=1185654.91..1254998.21 rows=548621 width=71) (actual time=6314.015..6314.209 rows=179 loops=1)
         Group Key: customer.c_custkey, orders.o_orderkey
         ->  Gather Merge  (cost=1185654.91..1243568.61 rows=457184 width=71) (actual time=6314.011..6319.034 rows=179 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=1184654.88..1189798.20 rows=228592 width=71) (actual time=6312.297..6312.371 rows=60 loops=3)
                     Group Key: customer.c_custkey, orders.o_orderkey
                     ->  Sort  (cost=1184654.88..1185226.36 rows=228592 width=44) (actual time=6312.290..6312.302 rows=418 loops=3)
                           Sort Key: customer.c_custkey, orders.o_orderkey
                           Sort Method: quicksort  Memory: 56kB
                           Worker 0:  Sort Method: quicksort  Memory: 59kB
                           Worker 1:  Sort Method: quicksort  Memory: 56kB
                           ->  Nested Loop  (cost=1029888.36..1157272.44 rows=228592 width=44) (actual time=6290.914..6312.203 rows=418 loops=3)
                                 ->  Parallel Hash Join  (cost=1029887.92..1043454.21 rows=57159 width=43) (actual time=6290.893..6311.664 rows=60 loops=3)
                                       Hash Cond: (customer.c_custkey = orders.o_custkey)
                                       ->  Parallel Seq Scan on customer  (cost=0.00..12625.00 rows=187500 width=23) (actual time=0.013..12.575 rows=150000 loops=3)
                                       ->  Parallel Hash  (cost=1029173.44..1029173.44 rows=57159 width=24) (actual time=6289.832..6289.832 rows=60 loops=3)
                                             Buckets: 262144  Batches: 1  Memory Usage: 2144kB
                                             ->  Hash Join  (cost=904713.56..1029173.44 rows=57159 width=24) (actual time=5950.738..6289.536 rows=60 loops=3)
                                                   Hash Cond: (orders.o_orderkey = lineitem_1.l_orderkey)
                                                   ->  Parallel Seq Scan on orders  (cost=0.00..97028.00 rows=1875000 width=20) (actual time=0.010..150.807 rows=1500000 loops=3)
                                                   ->  Hash  (cost=902462.80..902462.80 rows=137181 width=4) (actual time=5942.933..5942.933 rows=179 loops=3)
                                                         Buckets: 131072  Batches: 2  Memory Usage: 1027kB
                                                         ->  GroupAggregate  (cost=0.56..901090.99 rows=137181 width=4) (actual time=2.094..5942.657 rows=179 loops=3)
                                                               Group Key: lineitem_1.l_orderkey
                                                               Filter: (sum(lineitem_1.l_quantity) > '300'::numeric)
                                                               Rows Removed by Filter: 4499821
                                                               ->  Index Scan using idx_lineitem_orderkey on lineitem lineitem_1  (cost=0.56..804934.80 rows=17996608 width=9) (actual time=0.018..3310.812 rows=17996609 loops=3)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.44..1.55 rows=44 width=9) (actual time=0.007..0.008 rows=7 loops=179)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
 Planning Time: 1.057 ms
 Execution Time: 6319.311 ms
(35 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/19.sql_explained.sql
SET


 Finalize Aggregate  (cost=103715.43..103715.44 rows=1 width=32) (actual time=94.930..94.930 rows=1 loops=1)
   ->  Gather  (cost=103715.21..103715.42 rows=2 width=32) (actual time=94.826..98.392 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=102715.21..102715.22 rows=1 width=32) (actual time=93.230..93.230 rows=1 loops=3)
               ->  Nested Loop  (cost=0.56..102714.12 rows=145 width=12) (actual time=0.566..93.163 rows=121 loops=3)
                     ->  Parallel Seq Scan on part  (cost=0.00..22914.00 rows=612 width=30) (actual time=0.071..36.987 rows=489 loops=3)
                           Filter: ((p_size >= 1) AND (((p_brand = 'Brand#12'::bpchar) AND (p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (p_size <= 5)) OR ((p_brand = 'Brand#23'::bpchar) AND (p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (p_size <= 10)) OR ((p_brand = 'Brand#34'::bpchar) AND (p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (p_size <= 15))))
                           Rows Removed by Filter: 199511
                     ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..130.38 rows=1 width=21) (actual time=0.102..0.115 rows=0 loops=1466)
                           Index Cond: (l_partkey = part.p_partkey)
                           Filter: ((l_shipmode = ANY ('{AIR,"AIR REG"}'::bpchar[])) AND (l_shipinstruct = 'DELIVER IN PERSON'::bpchar) AND (((l_quantity >= '1'::numeric) AND (l_quantity <= '11'::numeric)) OR ((l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric)) OR ((l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric))) AND (((part.p_brand = 'Brand#12'::bpchar) AND (part.p_container = ANY ('{"SM CASE","SM BOX","SM PACK","SM PKG"}'::bpchar[])) AND (l_quantity >= '1'::numeric) AND (l_quantity <= '11'::numeric) AND (part.p_size <= 5)) OR ((part.p_brand = 'Brand#23'::bpchar) AND (part.p_container = ANY ('{"MED BAG","MED BOX","MED PKG","MED PACK"}'::bpchar[])) AND (l_quantity >= '10'::numeric) AND (l_quantity <= '20'::numeric) AND (part.p_size <= 10)) OR ((part.p_brand = 'Brand#34'::bpchar) AND (part.p_container = ANY ('{"LG CASE","LG BOX","LG PACK","LG PKG"}'::bpchar[])) AND (l_quantity >= '20'::numeric) AND (l_quantity <= '30'::numeric) AND (part.p_size <= 15))))
                           Rows Removed by Filter: 30
 Planning Time: 0.988 ms
 Execution Time: 98.467 ms
(15 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/1.sql_explained.sql
SET
                                                                      QUERY PLAN                                                                       
-------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=727355.76..727357.83 rows=6 width=236) (actual time=4812.340..4812.372 rows=4 loops=1)
   Group Key: l_returnflag, l_linestatus
   ->  Gather Merge  (cost=727355.76..727357.16 rows=12 width=236) (actual time=4812.320..4815.208 rows=12 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Sort  (cost=726355.74..726355.75 rows=6 width=236) (actual time=4810.906..4810.906 rows=4 loops=3)
               Sort Key: l_returnflag, l_linestatus
               Sort Method: quicksort  Memory: 27kB
               Worker 0:  Sort Method: quicksort  Memory: 27kB
               Worker 1:  Sort Method: quicksort  Memory: 27kB
               ->  Partial HashAggregate  (cost=726355.49..726355.66 rows=6 width=236) (actual time=4810.883..4810.887 rows=4 loops=3)
                     Group Key: l_returnflag, l_linestatus
                     ->  Parallel Seq Scan on lineitem  (cost=0.00..431110.33 rows=7381129 width=25) (actual time=0.010..727.668 rows=5914512 loops=3)
                           Filter: (l_shipdate <= '1998-09-02 00:00:00'::timestamp without time zone)
                           Rows Removed by Filter: 84357
 Planning Time: 0.603 ms
 Execution Time: 4815.344 ms
(17 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/20.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                 
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=376649.72..376650.53 rows=323 width=51) (actual time=601.236..601.250 rows=556 loops=1)
   Sort Key: supplier.s_name
   Sort Method: quicksort  Memory: 89kB
   ->  Hash Semi Join  (cost=375918.76..376636.26 rows=323 width=51) (actual time=598.826..600.649 rows=556 loops=1)
         Hash Cond: (supplier.s_suppkey = partsupp.ps_suppkey)
         ->  Nested Loop  (cost=25.59..733.93 rows=1200 width=55) (actual time=0.172..1.831 rows=1225 loops=1)
               ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.009..0.011 rows=1 loops=1)
                     Filter: (n_name = 'CANADA'::bpchar)
                     Rows Removed by Filter: 24
               ->  Bitmap Heap Scan on supplier  (cost=25.59..720.61 rows=1200 width=59) (actual time=0.162..1.743 rows=1225 loops=1)
                     Recheck Cond: (s_nationkey = nation.n_nationkey)
                     Heap Blocks: exact=576
                     ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..25.29 rows=1200 width=0) (actual time=0.117..0.118 rows=1225 loops=1)
                           Index Cond: (s_nationkey = nation.n_nationkey)
         ->  Hash  (cost=375792.16..375792.16 rows=8081 width=4) (actual time=598.618..598.618 rows=17519 loops=1)
               Buckets: 32768 (originally 8192)  Batches: 1 (originally 1)  Memory Usage: 872kB
               ->  Nested Loop  (cost=0.43..375792.16 rows=8081 width=4) (actual time=0.115..594.108 rows=17519 loops=1)
                     ->  Seq Scan on part  (cost=0.00..19789.00 rows=6061 width=4) (actual time=0.009..55.722 rows=6491 loops=1)
                           Filter: ((p_name)::text ~~ 'forest%'::text)
                           Rows Removed by Filter: 593509
                     ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..58.72 rows=2 width=8) (actual time=0.034..0.082 rows=3 loops=6491)
                           Index Cond: (ps_partkey = part.p_partkey)
                           Filter: ((ps_availqty)::numeric > (SubPlan 1))
                           Rows Removed by Filter: 1
                           SubPlan 1
                             ->  Aggregate  (cost=8.59..8.60 rows=1 width=32) (actual time=0.019..0.019 rows=1 loops=25964)
                                   ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..8.59 rows=1 width=5) (actual time=0.012..0.018 rows=1 loops=25964)
                                         Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                                         Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                         Rows Removed by Filter: 6
 Planning Time: 1.060 ms
 Execution Time: 601.360 ms
(32 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/21.sql_explained.sql
SET
                                                                                            QUERY PLAN                                                                                             
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=570064.56..570064.57 rows=1 width=34) (actual time=1415.924..1415.954 rows=1234 loops=1)
   Sort Key: (count(*)) DESC, supplier.s_name
   Sort Method: quicksort  Memory: 145kB
   ->  GroupAggregate  (cost=570064.53..570064.55 rows=1 width=34) (actual time=1412.313..1413.596 rows=1234 loops=1)
         Group Key: supplier.s_name
         ->  Sort  (cost=570064.53..570064.54 rows=1 width=26) (actual time=1412.304..1412.681 rows=12426 loops=1)
               Sort Key: supplier.s_name
               Sort Method: quicksort  Memory: 1355kB
               ->  Nested Loop  (cost=1750.48..570064.52 rows=1 width=26) (actual time=2.419..1382.194 rows=12426 loops=1)
                     ->  Nested Loop Semi Join  (cost=1750.05..570059.86 rows=1 width=34) (actual time=2.075..1282.090 rows=25164 loops=1)
                           ->  Gather  (cost=1749.49..570054.04 rows=1 width=34) (actual time=1.964..1214.872 rows=42136 loops=1)
                                 Workers Planned: 2
                                 Workers Launched: 2
                                 ->  Nested Loop Anti Join  (cost=749.49..569053.94 rows=1 width=34) (actual time=1.531..1322.655 rows=14045 loops=3)
                                       ->  Hash Join  (cost=748.93..442232.30 rows=99981 width=34) (actual time=1.442..990.682 rows=156267 loops=3)
                                             Hash Cond: (l1.l_suppkey = supplier.s_suppkey)
                                             ->  Parallel Seq Scan on lineitem l1  (cost=0.00..431110.33 rows=2499529 width=8) (actual time=0.016..783.933 rows=3792542 loops=3)
                                                   Filter: (l_receiptdate > l_commitdate)
                                                   Rows Removed by Filter: 2206328
                                             ->  Hash  (cost=733.93..733.93 rows=1200 width=30) (actual time=1.376..1.376 rows=1234 loops=3)
                                                   Buckets: 2048  Batches: 1  Memory Usage: 94kB
                                                   ->  Nested Loop  (cost=25.59..733.93 rows=1200 width=30) (actual time=0.183..1.237 rows=1234 loops=3)
                                                         ->  Seq Scan on nation  (cost=0.00..1.31 rows=1 width=4) (actual time=0.011..0.012 rows=1 loops=3)
                                                               Filter: (n_name = 'SAUDI ARABIA'::bpchar)
                                                               Rows Removed by Filter: 24
                                                         ->  Bitmap Heap Scan on supplier  (cost=25.59..720.61 rows=1200 width=34) (actual time=0.170..1.154 rows=1234 loops=3)
                                                               Recheck Cond: (s_nationkey = nation.n_nationkey)
                                                               Heap Blocks: exact=560
                                                               ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..25.29 rows=1200 width=0) (actual time=0.099..0.099 rows=1234 loops=3)
                                                                     Index Cond: (s_nationkey = nation.n_nationkey)
                                       ->  Index Scan using idx_lineitem_orderkey on lineitem l3  (cost=0.56..5.91 rows=15 width=8) (actual time=0.002..0.002 rows=1 loops=468801)
                                             Index Cond: (l_orderkey = l1.l_orderkey)
                                             Filter: ((l_receiptdate > l_commitdate) AND (l_suppkey <> l1.l_suppkey))
                                             Rows Removed by Filter: 1
                           ->  Index Scan using idx_lineitem_orderkey on lineitem l2  (cost=0.56..5.80 rows=44 width=8) (actual time=0.001..0.001 rows=1 loops=42136)
                                 Index Cond: (l_orderkey = l1.l_orderkey)
                                 Filter: (l_suppkey <> l1.l_suppkey)
                                 Rows Removed by Filter: 1
                     ->  Index Scan using orders_pkey on orders  (cost=0.43..4.66 rows=1 width=4) (actual time=0.004..0.004 rows=0 loops=25164)
                           Index Cond: (o_orderkey = l1.l_orderkey)
                           Filter: (o_orderstatus = 'F'::bpchar)
                           Rows Removed by Filter: 1
 Planning Time: 1.422 ms
 Execution Time: 1416.220 ms
(44 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/2.sql_explained.sql
SET
                                                                                     QUERY PLAN                                                                                     
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=189425.80..189425.81 rows=1 width=270) (actual time=1114.996..1115.068 rows=1419 loops=1)
   Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey
   Sort Method: quicksort  Memory: 434kB
   ->  Hash Join  (cost=88215.11..189425.79 rows=1 width=270) (actual time=1012.430..1114.389 rows=1419 loops=1)
         Hash Cond: ((part.p_partkey = partsupp.ps_partkey) AND ((SubPlan 1) = partsupp.ps_supplycost))
         ->  Gather  (cost=1000.00..17265.60 rows=2266 width=30) (actual time=0.260..0.558 rows=2366 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Parallel Seq Scan on part  (cost=0.00..16039.00 rows=944 width=30) (actual time=0.073..26.877 rows=789 loops=3)
                     Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 15))
                     Rows Removed by Filter: 199211
         ->  Hash  (cost=63608.11..63608.11 rows=480000 width=250) (actual time=1009.516..1009.516 rows=478400 loops=1)
               Buckets: 16384  Batches: 64  Memory Usage: 1635kB
               ->  Nested Loop  (cost=21.17..63608.11 rows=480000 width=250) (actual time=0.226..861.965 rows=478400 loops=1)
                     ->  Nested Loop  (cost=20.74..694.13 rows=6000 width=244) (actual time=0.212..11.083 rows=5980 loops=1)
                           ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.030..0.047 rows=5 loops=1)
                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.007..0.012 rows=25 loops=1)
                                 ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.009..0.009 rows=1 loops=1)
                                       Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                       ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.006..0.007 rows=1 loops=1)
                                             Filter: (r_name = 'EUROPE'::bpchar)
                                             Rows Removed by Filter: 4
                           ->  Bitmap Heap Scan on supplier  (cost=19.67..126.35 rows=1200 width=144) (actual time=0.139..2.025 rows=1196 loops=5)
                                 Recheck Cond: (s_nationkey = nation.n_nationkey)
                                 Heap Blocks: exact=2797
                                 ->  Bitmap Index Scan on idx_supplier_nation_key  (cost=0.00..19.37 rows=1200 width=0) (actual time=0.098..0.098 rows=1196 loops=5)
                                       Index Cond: (s_nationkey = nation.n_nationkey)
                     ->  Index Scan using idx_partsupp_suppkey on partsupp  (cost=0.43..9.69 rows=80 width=14) (actual time=0.005..0.136 rows=80 loops=5980)
                           Index Cond: (ps_suppkey = supplier.s_suppkey)
         SubPlan 1
           ->  Aggregate  (cost=60.44..60.45 rows=1 width=32) (actual time=0.013..0.013 rows=1 loops=3785)
                 ->  Nested Loop  (cost=0.85..60.44 rows=1 width=6) (actual time=0.010..0.013 rows=1 loops=3785)
                       Join Filter: (nation_1.n_regionkey = region_1.r_regionkey)
                       Rows Removed by Join Filter: 3
                       ->  Seq Scan on region region_1  (cost=0.00..1.06 rows=1 width=4) (actual time=0.000..0.001 rows=1 loops=3785)
                             Filter: (r_name = 'EUROPE'::bpchar)
                             Rows Removed by Filter: 4
                       ->  Nested Loop  (cost=0.85..59.30 rows=6 width=10) (actual time=0.006..0.012 rows=4 loops=3785)
                             ->  Nested Loop  (cost=0.72..58.37 rows=6 width=10) (actual time=0.005..0.009 rows=4 loops=3785)
                                   ->  Index Scan using idx_partsupp_partkey on partsupp partsupp_1  (cost=0.43..8.54 rows=6 width=10) (actual time=0.003..0.004 rows=4 loops=3785)
                                         Index Cond: (ps_partkey = part.p_partkey)
                                   ->  Index Scan using supplier_pkey on supplier supplier_1  (cost=0.29..8.30 rows=1 width=8) (actual time=0.001..0.001 rows=1 loops=15140)
                                         Index Cond: (s_suppkey = partsupp_1.ps_suppkey)
                             ->  Index Scan using nation_pkey on nation nation_1  (cost=0.14..0.16 rows=1 width=8) (actual time=0.000..0.000 rows=1 loops=15140)
                                   Index Cond: (n_nationkey = supplier_1.s_nationkey)
 Planning Time: 1.518 ms
 Execution Time: 1115.273 ms
(48 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/3.sql_explained.sql
SET
                                                                               QUERY PLAN                                                                               
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=858042.53..860413.62 rows=948435 width=44) (actual time=869.885..871.593 rows=34207 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC, orders.o_orderdate
   Sort Method: quicksort  Memory: 3618kB
   ->  Finalize GroupAggregate  (cost=580715.97..705533.75 rows=948435 width=44) (actual time=827.332..860.703 rows=34207 loops=1)
         Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
         ->  Gather Merge  (cost=580715.97..683798.79 rows=790362 width=44) (actual time=827.323..844.841 rows=34207 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=579715.95..591571.38 rows=395181 width=44) (actual time=825.503..838.560 rows=11402 loops=3)
                     Group Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                     ->  Sort  (cost=579715.95..580703.90 rows=395181 width=24) (actual time=825.494..826.374 rows=30009 loops=3)
                           Sort Key: lineitem.l_orderkey, orders.o_orderdate, orders.o_shippriority
                           Sort Method: quicksort  Memory: 3102kB
                           Worker 0:  Sort Method: quicksort  Memory: 3129kB
                           Worker 1:  Sort Method: quicksort  Memory: 3107kB
                           ->  Nested Loop  (cost=13569.66..534873.62 rows=395181 width=24) (actual time=22.389..818.694 rows=30009 loops=3)
                                 ->  Parallel Hash Join  (cost=13569.23..117679.82 rows=185097 width=12) (actual time=22.177..320.125 rows=146891 loops=3)
                                       Hash Cond: (orders.o_custkey = customer.c_custkey)
                                       ->  Parallel Seq Scan on orders  (cost=0.00..101715.50 rows=912408 width=16) (actual time=0.010..154.713 rows=728721 loops=3)
                                             Filter: (o_orderdate < '1995-03-15'::date)
                                             Rows Removed by Filter: 771279
                                       ->  Parallel Hash  (cost=13093.75..13093.75 rows=38038 width=4) (actual time=21.855..21.855 rows=30119 loops=3)
                                             Buckets: 131072  Batches: 1  Memory Usage: 4576kB
                                             ->  Parallel Seq Scan on customer  (cost=0.00..13093.75 rows=38038 width=4) (actual time=0.009..18.318 rows=30119 loops=3)
                                                   Filter: (c_mktsegment = 'BUILDING'::bpchar)
                                                   Rows Removed by Filter: 119881
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.44..2.02 rows=23 width=16) (actual time=0.003..0.003 rows=0 loops=440674)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: (l_shipdate > '1995-03-15'::date)
                                       Rows Removed by Filter: 4
 Planning Time: 0.912 ms
 Execution Time: 873.095 ms
(32 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/4.sql_explained.sql
SET
                                                                                QUERY PLAN                                                                                
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=167523.59..167573.97 rows=5 width=24) (actual time=426.314..430.093 rows=5 loops=1)
   Group Key: orders.o_orderpriority
   ->  Gather Merge  (cost=167523.59..167573.87 rows=10 width=24) (actual time=425.337..432.993 rows=15 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=166523.56..166572.69 rows=5 width=24) (actual time=423.369..427.101 rows=5 loops=3)
               Group Key: orders.o_orderpriority
               ->  Sort  (cost=166523.56..166539.92 rows=6544 width=16) (actual time=422.453..423.943 rows=52805 loops=3)
                     Sort Key: orders.o_orderpriority
                     Sort Method: quicksort  Memory: 3846kB
                     Worker 0:  Sort Method: quicksort  Memory: 3845kB
                     Worker 1:  Sort Method: quicksort  Memory: 3833kB
                     ->  Nested Loop Semi Join  (cost=3649.26..166108.81 rows=6544 width=16) (actual time=21.992..412.564 rows=52805 loops=3)
                           ->  Parallel Bitmap Heap Scan on orders  (cost=3648.70..98727.58 rows=71555 width=20) (actual time=21.964..151.818 rows=57571 loops=3)
                                 Recheck Cond: ((o_orderdate >= '1993-07-01'::date) AND (o_orderdate < '1993-10-01 00:00:00'::timestamp without time zone))
                                 Rows Removed by Index Recheck: 606220
                                 Heap Blocks: exact=12364 lossy=11093
                                 ->  Bitmap Index Scan on idx_orders_orderdate  (cost=0.00..3605.76 rows=171733 width=0) (actual time=18.326..18.326 rows=172713 loops=1)
                                       Index Cond: ((o_orderdate >= '1993-07-01'::date) AND (o_orderdate < '1993-10-01 00:00:00'::timestamp without time zone))
                           ->  Index Scan using idx_lineitem_orderkey on lineitem  (cost=0.56..5.78 rows=15 width=4) (actual time=0.004..0.004 rows=1 loops=172713)
                                 Index Cond: (l_orderkey = orders.o_orderkey)
                                 Filter: (l_commitdate < l_receiptdate)
                                 Rows Removed by Filter: 1
 Planning Time: 0.695 ms
 Execution Time: 433.305 ms
(25 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/5.sql_explained.sql
SET
                                                                                   QUERY PLAN                                                                                   
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=302699.71..302699.78 rows=25 width=136) (actual time=1197.215..1197.216 rows=5 loops=1)
   Sort Key: (sum((lineitem.l_extendedprice * ('1'::numeric - lineitem.l_discount)))) DESC
   Sort Method: quicksort  Memory: 25kB
   ->  Finalize GroupAggregate  (cost=302578.45..302699.13 rows=25 width=136) (actual time=1195.507..1197.198 rows=5 loops=1)
         Group Key: nation.n_name
         ->  Gather Merge  (cost=302578.45..302698.45 rows=50 width=136) (actual time=1195.071..1201.379 rows=15 loops=1)
               Workers Planned: 2
               Workers Launched: 2
               ->  Partial GroupAggregate  (cost=301578.43..301692.65 rows=25 width=136) (actual time=1193.357..1195.008 rows=5 loops=3)
                     Group Key: nation.n_name
                     ->  Sort  (cost=301578.43..301601.21 rows=9113 width=116) (actual time=1192.938..1193.147 rows=7343 loops=3)
                           Sort Key: nation.n_name
                           Sort Method: quicksort  Memory: 755kB
                           Worker 0:  Sort Method: quicksort  Memory: 773kB
                           Worker 1:  Sort Method: quicksort  Memory: 770kB
                           ->  Hash Join  (cost=1418.33..300979.08 rows=9113 width=116) (actual time=6.909..1189.629 rows=7343 loops=3)
                                 Hash Cond: ((lineitem.l_suppkey = supplier.s_suppkey) AND (customer.c_nationkey = supplier.s_nationkey))
                                 ->  Nested Loop  (cost=3.33..298367.97 rows=227830 width=128) (actual time=0.185..1138.815 rows=183378 loops=3)
                                       ->  Nested Loop  (cost=2.90..75605.09 rows=56968 width=116) (actual time=0.154..784.881 rows=45716 loops=3)
                                             ->  Hash Join  (cost=2.46..13705.59 rows=37500 width=116) (actual time=0.083..31.749 rows=30145 loops=3)
                                                   Hash Cond: (customer.c_nationkey = nation.n_nationkey)
                                                   ->  Parallel Seq Scan on customer  (cost=0.00..12625.00 rows=187500 width=8) (actual time=0.009..17.034 rows=150000 loops=3)
                                                   ->  Hash  (cost=2.40..2.40 rows=5 width=108) (actual time=0.033..0.033 rows=5 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Hash Join  (cost=1.07..2.40 rows=5 width=108) (actual time=0.028..0.031 rows=5 loops=3)
                                                               Hash Cond: (nation.n_regionkey = region.r_regionkey)
                                                               ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=112) (actual time=0.008..0.009 rows=25 loops=3)
                                                               ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.010 rows=1 loops=3)
                                                                     Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                                     ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.005..0.005 rows=1 loops=3)
                                                                           Filter: (r_name = 'ASIA'::bpchar)
                                                                           Rows Removed by Filter: 4
                                             ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.62 rows=3 width=8) (actual time=0.010..0.025 rows=2 loops=90434)
                                                   Index Cond: (o_custkey = customer.c_custkey)
                                                   Filter: ((o_orderdate >= '1994-01-01'::date) AND (o_orderdate < '1995-01-01 00:00:00'::timestamp without time zone))
                                                   Rows Removed by Filter: 8
                                       ->  Index Scan using lineitem_pkey on lineitem  (cost=0.44..3.47 rows=44 width=20) (actual time=0.007..0.007 rows=4 loops=137149)
                                             Index Cond: (l_orderkey = orders.o_orderkey)
                                 ->  Hash  (cost=965.00..965.00 rows=30000 width=8) (actual time=6.268..6.268 rows=30000 loops=3)
                                       Buckets: 32768  Batches: 1  Memory Usage: 1428kB
                                       ->  Seq Scan on supplier  (cost=0.00..965.00 rows=30000 width=8) (actual time=0.004..3.658 rows=30000 loops=3)
 Planning Time: 1.961 ms
 Execution Time: 1201.632 ms
(43 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/6.sql_explained.sql
SET
                                                                                                        QUERY PLAN                                                                                                         
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize Aggregate  (cost=507805.74..507805.75 rows=1 width=32) (actual time=724.835..724.835 rows=1 loops=1)
   ->  Gather  (cost=507805.52..507805.73 rows=2 width=32) (actual time=724.780..726.318 rows=3 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial Aggregate  (cost=506805.52..506805.53 rows=1 width=32) (actual time=723.465..723.465 rows=1 loops=3)
               ->  Parallel Seq Scan on lineitem  (cost=0.00..506096.20 rows=141863 width=12) (actual time=0.021..705.882 rows=114155 loops=3)
                     Filter: ((l_shipdate >= '1994-01-01'::date) AND (l_shipdate < '1995-01-01 00:00:00'::timestamp without time zone) AND (l_discount >= 0.05) AND (l_discount <= 0.07) AND (l_quantity < '24'::numeric))
                     Rows Removed by Filter: 5884715
 Planning Time: 0.402 ms
 Execution Time: 726.378 ms
(10 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/7.sql_explained.sql
SET
                                                                                      QUERY PLAN                                                                                       
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=327548.60..329906.60 rows=10060 width=248) (actual time=1272.724..1274.268 rows=4 loops=1)
   Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
   ->  Gather Merge  (cost=327548.60..329543.00 rows=15004 width=248) (actual time=1272.249..1278.531 rows=12 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=326548.57..326811.14 rows=7502 width=248) (actual time=1270.504..1271.967 rows=4 loops=3)
               Group Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
               ->  Sort  (cost=326548.57..326567.33 rows=7502 width=228) (actual time=1270.037..1270.209 rows=5777 loops=3)
                     Sort Key: n1.n_name, n2.n_name, (date_part('year'::text, (lineitem.l_shipdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 997kB
                     Worker 0:  Sort Method: quicksort  Memory: 1009kB
                     Worker 1:  Sort Method: quicksort  Memory: 1009kB
                     ->  Hash Join  (cost=1090.77..326065.70 rows=7502 width=228) (actual time=5.631..1266.331 rows=5777 loops=3)
                           Hash Cond: (lineitem.l_suppkey = supplier.s_suppkey)
                           Join Filter: (((n1.n_name = 'FRANCE'::bpchar) AND (n2.n_name = 'GERMANY'::bpchar)) OR ((n1.n_name = 'GERMANY'::bpchar) AND (n2.n_name = 'FRANCE'::bpchar)))
                           Rows Removed by Join Filter: 5832
                           ->  Nested Loop  (cost=2.27..323975.29 rows=180262 width=124) (actual time=0.153..1229.706 rows=147332 loops=3)
                                 ->  Nested Loop  (cost=1.83..38786.82 rows=150000 width=108) (actual time=0.084..367.923 rows=121711 loops=3)
                                       ->  Hash Join  (cost=1.40..13202.02 rows=15000 width=108) (actual time=0.045..28.334 rows=12073 loops=3)
                                             Hash Cond: (customer.c_nationkey = n2.n_nationkey)
                                             ->  Parallel Seq Scan on customer  (cost=0.00..12625.00 rows=187500 width=8) (actual time=0.009..16.629 rows=150000 loops=3)
                                             ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.016..0.016 rows=2 loops=3)
                                                   Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                   ->  Seq Scan on nation n2  (cost=0.00..1.38 rows=2 width=108) (actual time=0.009..0.011 rows=2 loops=3)
                                                         Filter: ((n_name = 'GERMANY'::bpchar) OR (n_name = 'FRANCE'::bpchar))
                                                         Rows Removed by Filter: 23
                                       ->  Index Scan using idx_orders_custkey on orders  (cost=0.43..1.54 rows=17 width=8) (actual time=0.004..0.027 rows=10 loops=36219)
                                             Index Cond: (o_custkey = customer.c_custkey)
                                 ->  Index Scan using lineitem_pkey on lineitem  (cost=0.44..1.77 rows=13 width=24) (actual time=0.007..0.007 rows=1 loops=365134)
                                       Index Cond: (l_orderkey = orders.o_orderkey)
                                       Filter: ((l_shipdate >= '1995-01-01'::date) AND (l_shipdate <= '1996-12-31'::date))
                                       Rows Removed by Filter: 3
                           ->  Hash  (cost=1058.50..1058.50 rows=2400 width=108) (actual time=4.994..4.994 rows=2361 loops=3)
                                 Buckets: 4096  Batches: 1  Memory Usage: 175kB
                                 ->  Hash Join  (cost=1.40..1058.50 rows=2400 width=108) (actual time=0.024..4.698 rows=2361 loops=3)
                                       Hash Cond: (supplier.s_nationkey = n1.n_nationkey)
                                       ->  Seq Scan on supplier  (cost=0.00..965.00 rows=30000 width=8) (actual time=0.006..2.875 rows=30000 loops=3)
                                       ->  Hash  (cost=1.38..1.38 rows=2 width=108) (actual time=0.006..0.006 rows=2 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Seq Scan on nation n1  (cost=0.00..1.38 rows=2 width=108) (actual time=0.002..0.004 rows=2 loops=3)
                                                   Filter: ((n_name = 'FRANCE'::bpchar) OR (n_name = 'GERMANY'::bpchar))
                                                   Rows Removed by Filter: 23
 Planning Time: 1.625 ms
 Execution Time: 1278.754 ms
(44 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/8.sql_explained.sql
SET
                                                                                             QUERY PLAN                                                                                              
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=241291.57..242077.91 rows=2406 width=40) (actual time=470.993..470.999 rows=2 loops=1)
   Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=241291.57..241963.62 rows=4812 width=72) (actual time=470.508..475.449 rows=6 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=240291.54..240408.18 rows=2406 width=72) (actual time=468.669..469.096 rows=2 loops=3)
               Group Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=240291.54..240299.16 rows=3045 width=124) (actual time=468.268..468.341 rows=2548 loops=3)
                     Sort Key: (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
                     Sort Method: quicksort  Memory: 297kB
                     Worker 0:  Sort Method: quicksort  Memory: 291kB
                     Worker 1:  Sort Method: quicksort  Memory: 299kB
                     ->  Hash Join  (cost=5.73..240115.36 rows=3045 width=124) (actual time=0.546..467.354 rows=2548 loops=3)
                           Hash Cond: (supplier.s_nationkey = n2.n_nationkey)
                           ->  Nested Loop  (cost=4.17..240089.22 rows=3045 width=20) (actual time=0.507..466.110 rows=2548 loops=3)
                                 ->  Hash Join  (cost=3.88..239159.99 rows=3045 width=20) (actual time=0.487..457.292 rows=2548 loops=3)
                                       Hash Cond: (customer.c_nationkey = n1.n_nationkey)
                                       ->  Nested Loop  (cost=1.42..239069.97 rows=15226 width=24) (actual time=0.159..455.134 rows=12620 loops=3)
                                             ->  Nested Loop  (cost=0.99..231838.54 rows=15226 width=24) (actual time=0.139..391.618 rows=12620 loops=3)
                                                   ->  Nested Loop  (cost=0.56..208115.67 rows=49928 width=20) (actual time=0.059..147.467 rows=41855 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..15414.00 rows=1665 width=4) (actual time=0.034..21.804 rows=1396 loops=3)
                                                               Filter: ((p_type)::text = 'ECONOMY ANODIZED STEEL'::text)
                                                               Rows Removed by Filter: 198604
                                                         ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..115.41 rows=33 width=24) (actual time=0.007..0.087 rows=30 loops=4187)
                                                               Index Cond: (l_partkey = part.p_partkey)
                                                   ->  Index Scan using orders_pkey on orders  (cost=0.43..0.48 rows=1 width=12) (actual time=0.006..0.006 rows=0 loops=125565)
                                                         Index Cond: (o_orderkey = lineitem.l_orderkey)
                                                         Filter: ((o_orderdate >= '1995-01-01'::date) AND (o_orderdate <= '1996-12-31'::date))
                                                         Rows Removed by Filter: 1
                                             ->  Index Scan using customer_pkey on customer  (cost=0.42..0.47 rows=1 width=8) (actual time=0.005..0.005 rows=1 loops=37859)
                                                   Index Cond: (c_custkey = orders.o_custkey)
                                       ->  Hash  (cost=2.40..2.40 rows=5 width=4) (actual time=0.031..0.031 rows=5 loops=3)
                                             Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                             ->  Hash Join  (cost=1.07..2.40 rows=5 width=4) (actual time=0.021..0.028 rows=5 loops=3)
                                                   Hash Cond: (n1.n_regionkey = region.r_regionkey)
                                                   ->  Seq Scan on nation n1  (cost=0.00..1.25 rows=25 width=8) (actual time=0.002..0.003 rows=25 loops=3)
                                                   ->  Hash  (cost=1.06..1.06 rows=1 width=4) (actual time=0.010..0.011 rows=1 loops=3)
                                                         Buckets: 1024  Batches: 1  Memory Usage: 9kB
                                                         ->  Seq Scan on region  (cost=0.00..1.06 rows=1 width=4) (actual time=0.008..0.008 rows=1 loops=3)
                                                               Filter: (r_name = 'AMERICA'::bpchar)
                                                               Rows Removed by Filter: 4
                                 ->  Index Scan using supplier_pkey on supplier  (cost=0.29..0.31 rows=1 width=8) (actual time=0.003..0.003 rows=1 loops=7644)
                                       Index Cond: (s_suppkey = lineitem.l_suppkey)
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.018..0.018 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation n2  (cost=0.00..1.25 rows=25 width=108) (actual time=0.010..0.011 rows=25 loops=3)
 Planning Time: 2.193 ms
 Execution Time: 475.630 ms
(48 rows)

execute /home/pei/Project/benchmarks/tpch-postgres/dbgen/out/skinner_explained/9.sql_explained.sql
SET
                                                                                           QUERY PLAN                                                                                           
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Finalize GroupAggregate  (cost=335902.07..360670.25 rows=60150 width=144) (actual time=1838.189..2032.649 rows=175 loops=1)
   Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
   ->  Gather Merge  (cost=335902.07..358414.62 rows=120300 width=144) (actual time=1837.004..2061.559 rows=525 loops=1)
         Workers Planned: 2
         Workers Launched: 2
         ->  Partial GroupAggregate  (cost=334902.05..343529.00 rows=60150 width=144) (actual time=1832.400..2022.895 rows=175 loops=3)
               Group Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone))
               ->  Sort  (cost=334902.05..335848.84 rows=378716 width=135) (actual time=1831.710..1888.215 rows=326640 loops=3)
                     Sort Key: nation.n_name, (date_part('year'::text, (orders.o_orderdate)::timestamp without time zone)) DESC
                     Sort Method: external merge  Disk: 24448kB
                     Worker 0:  Sort Method: external merge  Disk: 24616kB
                     Worker 1:  Sort Method: external merge  Disk: 23360kB
                     ->  Hash Join  (cost=147990.61..273923.08 rows=378716 width=135) (actual time=1403.289..1634.297 rows=326640 loops=3)
                           Hash Cond: (supplier.s_nationkey = nation.n_nationkey)
                           ->  Parallel Hash Join  (cost=147989.05..270865.28 rows=378716 width=31) (actual time=1403.252..1583.680 rows=326640 loops=3)
                                 Hash Cond: (orders.o_orderkey = lineitem.l_orderkey)
                                 ->  Parallel Seq Scan on orders  (cost=0.00..97028.00 rows=1875000 width=8) (actual time=0.015..147.395 rows=1500000 loops=3)
                                 ->  Parallel Hash  (cost=140666.10..140666.10 rows=378716 width=31) (actual time=1132.455..1132.455 rows=326640 loops=3)
                                       Buckets: 65536  Batches: 32  Memory Usage: 2720kB
                                       ->  Nested Loop  (cost=1340.99..140666.10 rows=378716 width=31) (actual time=6.673..1064.400 rows=326640 loops=3)
                                             Join Filter: (supplier.s_suppkey = lineitem.l_suppkey)
                                             ->  Hash Join  (cost=1340.43..74543.10 rows=50505 width=26) (actual time=6.646..108.440 rows=43547 loops=3)
                                                   Hash Cond: (partsupp.ps_suppkey = supplier.s_suppkey)
                                                   ->  Nested Loop  (cost=0.43..73070.50 rows=50505 width=18) (actual time=0.029..84.117 rows=43547 loops=3)
                                                         ->  Parallel Seq Scan on part  (cost=0.00..15414.00 rows=12626 width=4) (actual time=0.012..32.063 rows=10887 loops=3)
                                                               Filter: ((p_name)::text ~~ '%green%'::text)
                                                               Rows Removed by Filter: 189113
                                                         ->  Index Scan using idx_partsupp_partkey on partsupp  (cost=0.43..4.51 rows=6 width=14) (actual time=0.004..0.004 rows=4 loops=32660)
                                                               Index Cond: (ps_partkey = part.p_partkey)
                                                   ->  Hash  (cost=965.00..965.00 rows=30000 width=8) (actual time=6.517..6.517 rows=30000 loops=3)
                                                         Buckets: 32768  Batches: 1  Memory Usage: 1428kB
                                                         ->  Seq Scan on supplier  (cost=0.00..965.00 rows=30000 width=8) (actual time=0.009..4.069 rows=30000 loops=3)
                                             ->  Index Scan using idx_lineitem_part_supp on lineitem  (cost=0.56..1.30 rows=1 width=29) (actual time=0.004..0.021 rows=8 loops=130640)
                                                   Index Cond: ((l_partkey = partsupp.ps_partkey) AND (l_suppkey = partsupp.ps_suppkey))
                           ->  Hash  (cost=1.25..1.25 rows=25 width=108) (actual time=0.017..0.017 rows=25 loops=3)
                                 Buckets: 1024  Batches: 1  Memory Usage: 10kB
                                 ->  Seq Scan on nation  (cost=0.00..1.25 rows=25 width=108) (actual time=0.010..0.011 rows=25 loops=3)
 Planning Time: 2.674 ms
 Execution Time: 2064.532 ms
(39 rows)

